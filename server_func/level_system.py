import os
import json
from disnake.ext import commands
from disnake import Embed
import disnake

class LevelSystem(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –¥–æ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
        self.base_path = os.path.dirname(os.path.abspath(__file__))  # –ü—É—Ç—å –¥–æ server_func
        self.file_path = os.path.join(self.base_path, "../data/member_level.json")  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –ø–∞–ø–∫–µ data
        self.level_up_xp = 100  # –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
        self.level_roles = {
            5: "784159073385840651",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            15: "1091074897473720501",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            25: "1091078506986885212",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            35: "1091079383210541066",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            45: "1091079976025075852",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            55: "1091080623478812724"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ RoleID
            # –î–æ–±–∞–≤—å —Å–≤–æ–∏ —É—Ä–æ–≤–Ω–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º RoleID
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(self.file_path):
            with open(self.file_path, "w") as file:
                json.dump({}, file)

    def read_data(self):
        """–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON."""
        with open(self.file_path, "r") as file:
            return json.load(file)

    def write_data(self, data):
        """–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ JSON."""
        with open(self.file_path, "w") as file:
            json.dump(data, file, indent=4)

    def add_user(self, user_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON."""
        data = self.read_data()
        if str(user_id) not in data:
            data[str(user_id)] = {
                "xp": 0, 
                "level": 1, 
                "messages_sent": 0, 
                "level_ups_sent": []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            }
            self.write_data(data)

    def update_user(self, user_id, xp_gain):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –æ–ø—ã—Ç, —Å–æ–æ–±—â–µ–Ω–∏—è, —É—Ä–æ–≤–µ–Ω—å."""
        data = self.read_data()
        user_data = data.get(str(user_id))
        
        if not user_data:
            self.add_user(user_id)
            user_data = data[str(user_id)]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞ 'level_ups_sent' –∏ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if 'level_ups_sent' not in user_data:
            user_data['level_ups_sent'] = []

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        user_data["xp"] += xp_gain
        user_data["messages_sent"] += 1
        
        # –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞
        next_level_xp = self.level_up_xp * (user_data["level"] ** 2)  # –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è
        level_up_occurred = False
        if user_data["xp"] >= next_level_xp:
            user_data["level"] += 1
            user_data["xp"] -= next_level_xp  # –£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –æ–ø—ã—Ç
            level_up_occurred = True
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å
        if level_up_occurred and user_data["level"] not in user_data["level_ups_sent"]:
            user_data["level_ups_sent"].append(user_data["level"])  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ —É—Ä–æ–≤–µ–Ω—å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
            data[str(user_id)] = user_data
            self.write_data(data)
            return user_data["level"], True  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        else:
            data[str(user_id)] = user_data
            self.write_data(data)
            return user_data["level"], False  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è

    async def assign_role(self, member, level):
        """–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è."""
        role_id = self.level_roles.get(level)
        if role_id:
            role = member.guild.get_role(int(role_id))
            if role:
                await member.add_roles(role)
                return role.name
        return None

    @commands.Cog.listener()
    async def on_message(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."""
        if message.author.bot:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ XP, –µ—Å–ª–∏ —ç—Ç–æ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞
        if hasattr(message, 'interaction') and message.interaction:
            return  # –≠—Ç–æ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞, –Ω–µ –Ω–∞—á–∏—Å–ª—è–µ–º XP

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        user_id = message.author.id
        xp_gain = 10  # –û–ø—ã—Ç –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.add_user(user_id)  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ
        new_level, level_up_sent = self.update_user(user_id, xp_gain)
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å
        if new_level > 1 and level_up_sent and message.channel:
            member = message.guild.get_member(user_id)
            role_name = await self.assign_role(member, new_level)

            # –°–æ–∑–¥–∞–µ–º Embed —Å–æ–æ–±—â–µ–Ω–∏–µ
            embed = Embed(
                title="",  # –ü—É—Å—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                description=f"üéâ {message.author.mention} –¥–æ—Å—Ç–∏–≥ —É—Ä–æ–≤–Ω—è {new_level}!\n\n"
                            f"{f'**–†–æ–ª—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å:** {role_name}' if role_name else ''}",
                color=disnake.Color.from_rgb(255, 182, 193)  # –ù–µ–∂–Ω–æ-—Ä–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed
            await message.channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_application_command(self, interaction):
        """–ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥."""
        # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã - –Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ–ø—ã—Ç–∞
        return

def setup(bot):
    bot.add_cog(LevelSystem(bot))
