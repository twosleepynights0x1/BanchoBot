import disnake
from disnake import Embed
from disnake.ext import commands
import json

class RoleAndMessageLogs(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open("conf/config.json", "r") as f:
            config = json.load(f)
        self.log_channel_id = config["ADMIN_LOG_CHANNEL"]

    async def send_log(self, embed: Embed):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª."""
        if self.log_channel_id:
            channel = self.bot.get_channel(self.log_channel_id)
            if channel:
                await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_message_edit(self, before: disnake.Message, after: disnake.Message):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        if before.author.bot or before.content == after.content:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –±–æ—Ç–æ–≤ –∏–ª–∏ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è

        embed = Embed(
            title="üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ",
            color=disnake.Color.orange(),
            timestamp=disnake.utils.utcnow()
        )
        embed.set_thumbnail(url=before.author.avatar.url if before.author.avatar else None)

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ Markdown-–±–ª–æ–∫–∏
        embed.add_field(
            name="–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è", 
            value=f"```{before.content[:1024]}```" if before.content else "```[–ü—É—Å—Ç–æ]```", 
            inline=False
        )
        embed.add_field(
            name="–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è", 
            value=f"```{after.content[:1024]}```" if after.content else "```[–ü—É—Å—Ç–æ]```", 
            inline=False
        )
        embed.add_field(name="–ê–≤—Ç–æ—Ä", value=before.author.mention, inline=False)
        embed.add_field(name="–ö–∞–Ω–∞–ª", value=before.channel.mention, inline=False)
        embed.add_field(
            name="–î–µ–π—Å—Ç–≤–∏–µ",
            value=f"[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é](https://discord.com/channels/{before.guild.id}/{before.channel.id}/{before.id})",
            inline=False
        )
        embed.set_footer(
            text=f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª: {before.author.name} ‚Ä¢ {disnake.utils.utcnow().strftime('%d.%m.%Y %H:%M')}",
            icon_url=before.author.avatar.url if before.author.avatar else None
        )
        await self.send_log(embed)

    @commands.Cog.listener()
    async def on_member_update(self, before: disnake.Member, after: disnake.Member):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–æ–ª–µ–π."""
        embed = Embed(color=disnake.Color.blurple(), timestamp=disnake.utils.utcnow())
        embed.set_thumbnail(url=after.avatar.url if after.avatar else None)
        embed.set_footer(
            text=f"[Role Logs]",
            icon_url=after.avatar.url if after.avatar else None
        )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π
        before_roles = set(before.roles)
        after_roles = set(after.roles)

        added_roles = after_roles - before_roles
        removed_roles = before_roles - after_roles

        if added_roles:
            role_names = ', '.join([role.mention for role in added_roles])
            embed.title = "‚ú® –†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞"
            embed.add_field(name="–î–æ–±–∞–≤–ª–µ–Ω–æ", value=role_names, inline=False)
        if removed_roles:
            role_names = ', '.join([role.mention for role in removed_roles])
            embed.title = "‚ùå –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞"
            embed.add_field(name="–£–¥–∞–ª–µ–Ω–æ", value=role_names, inline=False)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=after.mention, inline=False)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if added_roles or removed_roles:
            await self.send_log(embed)

def setup(bot):
    bot.add_cog(RoleAndMessageLogs(bot))
