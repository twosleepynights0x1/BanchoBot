import disnake
from disnake.ext import commands
from disnake.ui import Button, View
from disnake import Interaction
import json
import os


class SelfRolePings(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.config = self.load_config()
        self.admin_roles = self.config.get("ADMIN", [])

    def load_config(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ JSON —Ñ–∞–π–ª–∞."""
        config_path = os.path.join("conf", "config.json")
        try:
            with open(config_path, 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            print(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {config_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return {}
        except json.JSONDecodeError:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {config_path}")
            return {}

    async def send_embeds(self, channel: disnake.TextChannel):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Embed'—ã —Å —Ä–æ–ª—è–º–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–∏–Ω–≥–∞."""

        # –ü–µ—Ä–≤—ã–π —ç–º–±–µ–¥ (–†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π)
        news_embed = disnake.Embed(
            title="üì∞ –†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π",
            description=(
                "__–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —ç—Ç–∏–º –∏–≥—Ä–∞–º –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º–∏:__\n\n"
                "<@&1311089355686805514> ‚Äì –ø–∏–Ω–≥ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º Sky: Children of Light\n\n"
                "<@&1311189352533065808> ‚Äì –ø–∏–Ω–≥ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º Honkai: Star Rail\n\n"
                "<@&1311189464730832977> ‚Äì –ø–∏–Ω–≥ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º Genshin Impact"
            ),
            color=disnake.Color.blue()
        )

        # –í—Ç–æ—Ä–æ–π —ç–º–±–µ–¥ (–†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π –≤ –∏–≥—Ä–µ)
        event_embed = disnake.Embed(
            title="üéÆ –†–æ–ª–∏ –¥–ª—è –ø–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π –≤ –∏–≥—Ä–µ",
            description=(
                "__–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –∏–≥—Ä–µ Sky: Children of Light —Å —ç—Ç–æ–π —Ä–æ–ª—å—é:__\n\n"
                "<@&1311189081467916399> ‚Äì –ø–∏–Ω–≥ –ø–æ —Å–æ–±—ã—Ç–∏—è–º –≤ –∏–≥—Ä–µ Sky"
            ),
            color=disnake.Color.green()
        )

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–º–±–µ–¥–∞ (–Ω–æ–≤–æ—Å—Ç–∏)
        news_button_view = View()
        news_button_view.add_item(Button(label="Sky –ù–æ–≤–æ—Å—Ç–∏", custom_id="self_roles_role_sky_news", style=disnake.ButtonStyle.primary))
        news_button_view.add_item(Button(label="Honkai –ù–æ–≤–æ—Å—Ç–∏", custom_id="self_roles_role_honkai_news", style=disnake.ButtonStyle.primary))
        news_button_view.add_item(Button(label="Genshin Impact –ù–æ–≤–æ—Å—Ç–∏", custom_id="self_roles_role_genshin_news", style=disnake.ButtonStyle.primary))
        news_button_view.add_item(Button(label="–°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª–∏", custom_id="self_roles_reset_news_roles", style=disnake.ButtonStyle.danger))

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —ç–º–±–µ–¥–∞ (—Å–æ–±—ã—Ç–∏—è)
        event_button_view = View()
        event_button_view.add_item(Button(label="Sky –°–æ–±—ã—Ç–∏—è", custom_id="self_roles_role_sky_events", style=disnake.ButtonStyle.primary))
        event_button_view.add_item(Button(label="–°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª–∏", custom_id="self_roles_reset_event_roles", style=disnake.ButtonStyle.danger))

        # –û—Ç–ø—Ä–∞–≤–∫–∞ Embed'–æ–≤ —Å —Ä–æ–ª—è–º–∏
        await channel.send(embed=news_embed, view=news_button_view)
        await channel.send(embed=event_embed, view=event_button_view)

    @commands.slash_command(name="server_role_pings", description="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏–Ω–≥–æ–≤.")
    async def server_role_pings(self, inter: disnake.CommandInteraction, channel: disnake.TextChannel = None):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–µ–π –¥–ª—è –ø–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å–æ–±—ã—Ç–∏–π."""
        await inter.response.defer()

        user_roles = [role.id for role in inter.user.roles]

        if not any(role_id in user_roles for role_id in self.admin_roles):
            await inter.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
            return

        if not channel:
            channel = inter.channel

        await self.send_embeds(channel)

    @commands.Cog.listener()
    async def on_button_click(self, interaction: Interaction):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π –∏ —Å–±—Ä–æ—Å–∞ —Ä–æ–ª–µ–π."""
        if not interaction.data['custom_id'].startswith("self_roles_"):
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ SelfRolePings

        role_mapping = {
            "self_roles_role_sky_news": 1311089355686805514,
            "self_roles_role_honkai_news": 1311189352533065808,
            "self_roles_role_genshin_news": 1311189464730832977,
            "self_roles_role_sky_events": 1311189081467916399,
        }

        custom_id = interaction.data['custom_id']
        role_id = role_mapping.get(custom_id)

        if role_id:
            role = interaction.guild.get_role(role_id)
            if role:
                await interaction.user.add_roles(role)
                await interaction.response.send_message(f"–í–∞–º –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å {role.name}!", ephemeral=True)
            else:
                await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏.", ephemeral=True)
            return

        if custom_id == "self_roles_reset_news_roles":
            news_roles = [1311089355686805514, 1311189352533065808, 1311189464730832977]
            roles_to_remove = [role for role in interaction.user.roles if role.id in news_roles]

            if roles_to_remove:
                await interaction.user.remove_roles(*roles_to_remove)
                await interaction.response.send_message("–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —Ä–æ–ª–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã!", ephemeral=True)
            else:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —Å–±—Ä–æ—Å–∞.", ephemeral=True)

        elif custom_id == "self_roles_reset_event_roles":
            event_roles = [1311189081467916399]
            roles_to_remove = [role for role in interaction.user.roles if role.id in event_roles]

            if roles_to_remove:
                await interaction.user.remove_roles(*roles_to_remove)
                await interaction.response.send_message("–í—Å–µ —Å–æ–±—ã—Ç–∏—è —Ä–æ–ª–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã!", ephemeral=True)
            else:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–±—Ä–æ—Å–∞.", ephemeral=True)


def setup(bot):
    bot.add_cog(SelfRolePings(bot))
