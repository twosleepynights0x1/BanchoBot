import disnake
from disnake.ext import commands
from disnake import Embed
import os
import json

class UserLevel(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.base_path = os.path.dirname(os.path.abspath(__file__))  # –ü—É—Ç—å –¥–æ server_func
        self.file_path = os.path.join(self.base_path, "../data/member_level.json")  # –í –ø–∞–ø–∫—É data

    def read_data(self):
        """–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON."""
        with open(self.file_path, "r") as file:
            return json.load(file)

    @commands.slash_command(name="level", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def level(self, interaction: disnake.ApplicationCommandInteraction, member: disnake.Member = None):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–ª–∏ –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –∫–æ–º–∞–Ω–¥—É."""

        # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
        if not member:
            member = interaction.user

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ JSON
        data = self.read_data()
        user_data = data.get(str(member.id))

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ, —Ç–æ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        if not user_data:
            await interaction.response.send_message(f"{member.mention} –µ—â–µ –Ω–µ –∏–º–µ–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —É—Ä–æ–≤–Ω–µ.", ephemeral=True)
            return

        level = user_data["level"]
        xp = user_data["xp"]
        # –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞
        level_up_xp = 100 * (level ** 2)  # –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ XP –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è

        xp_needed = level_up_xp - xp  # –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –æ–ø—ã—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        progress = xp / level_up_xp  # –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ —à–∫–∞–ª—ã XP

        # –°–æ–∑–¥–∞–µ–º Embed
        embed = Embed(
            title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            description=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ {member.mention}",
            color=disnake.Color.blurple()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Å —É—Ä–æ–≤–Ω–µ–º –∏ –æ–ø—ã—Ç–æ–º
        embed.add_field(name="üíé –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å", value=level, inline=False)
        embed.add_field(name="‚ö° –¢–µ–∫—É—â–∏–π –æ–ø—ã—Ç", value=f"{xp} XP", inline=False)
        embed.add_field(name="‚ö° –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –æ–ø—ã—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è", value=f"{xp_needed} XP", inline=False)

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∑—É–Ω–æ–∫ XP
        progress_bar = self.create_xp_bar(progress)
        embed.add_field(name="üîã –ü—Ä–æ–≥—Ä–µ—Å—Å", value=progress_bar, inline=False)

        # –î–æ–±–∞–≤–ª—è–µ–º footer —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, –∫—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–º–∞–Ω–¥—É
        embed.set_footer(
            text=f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {interaction.user.display_name}", 
            icon_url=interaction.user.avatar.url if interaction.user.avatar else None
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed
        await interaction.response.send_message(embed=embed)

    def create_xp_bar(self, progress):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª–∑—É–Ω–∫–∞ XP –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏."""
        total_length = 20  # –î–ª–∏–Ω–∞ –ø–æ–ª–∑—É–Ω–∫–∞
        filled_length = int(total_length * progress)  # –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å
        bar = "‚ñà" * filled_length + "‚ñí" * (total_length - filled_length)  # –ü–æ–ª–∑—É–Ω–æ–∫
        return bar

def setup(bot):
    bot.add_cog(UserLevel(bot))
