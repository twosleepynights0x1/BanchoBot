import disnake
from disnake.ext import commands
import json

class ServerInviteLeaderboard(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open('conf/config.json', 'r', encoding='utf-8') as f:
            self.config = json.load(f)

    async def get_invite_data(self):
        invite_data = {}

        for invite in await self.bot.guilds[0].invites():
            inviter_id = str(invite.inviter.id)
            if invite.uses > 0:
                if inviter_id not in invite_data:
                    invite_data[inviter_id] = 0
                invite_data[inviter_id] += invite.uses

        sorted_invite_data = sorted(invite_data.items(), key=lambda x: x[1], reverse=True)
        return sorted_invite_data

    @commands.slash_command(description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π.")
    async def invite_leaderboard(self, inter: disnake.ApplicationCommandInteraction):
        await inter.response.defer()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º defer, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç–∞

        invite_data = await self.get_invite_data()

        if not invite_data:
            await inter.edit_original_message(content="–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è—Ö.")
            return

        embed = disnake.Embed(
            title="üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º",
            description="–¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏—Ö –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ª—é–¥–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä!",
            color=disnake.Color.gold()
        )
        embed.set_image(url=self.config["INVITE_IMAGE"])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –≤ footer
        server_icon = inter.guild.icon.url if inter.guild.icon else None
        embed.set_footer(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∫–ª–∞–¥ –≤ —Ä–æ—Å—Ç –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!", icon_url=server_icon)

        for index, (user_id, invite_count) in enumerate(invite_data[:10], start=1):
            user = await self.bot.fetch_user(int(user_id))
            embed.add_field(
                name=f"{index}. {user.display_name} üéâ",
                value=f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {invite_count} ",
                inline=False
            )

        await inter.edit_original_message(embed=embed)

def setup(bot):
    bot.add_cog(ServerInviteLeaderboard(bot))
