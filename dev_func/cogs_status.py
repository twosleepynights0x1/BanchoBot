import disnake
from disnake.ext import commands
from pathlib import Path
import json

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('conf/config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

class DevCogShow(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command()
    async def core_show(self, inter: disnake.ApplicationCommandInteraction):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–≥–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å—ã (–∑–∞–≥—Ä—É–∂–µ–Ω/–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω).
        –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        """
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not any(role.id in config["ADMIN"] for role in inter.author.roles):
            await inter.response.send_message(
                embed=disnake.Embed(
                    title="üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. "
                                "–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
                    color=disnake.Color.red(),
                ),
                ephemeral=True,
            )
            return

        # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–≥–æ–≤
        directories = [
            "admin_func",
            "dev_func",
            "event",
            "news",
            "server_func",
            "user_func",
        ]

        embed = disnake.Embed(
            title="üìú –°–ø–∏—Å–æ–∫ –∫–æ–≥–æ–≤",
            description="–ó–¥–µ—Å—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤—Å–µ –∫–æ–≥–∏ –≤ —Å–∏—Å—Ç–µ–º–µ, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º.\n\n"
                        "‚úÖ ‚Äî –ó–∞–≥—Ä—É–∂–µ–Ω | ‚ùå ‚Äî –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω",
            color=disnake.Color.blurple(),
        )

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        for directory in directories:
            cog_statuses = []
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            dir_path = Path(directory)
            if not dir_path.exists():
                continue

            for file in dir_path.iterdir():
                if file.suffix == ".py" and not file.name.startswith("_"):
                    cog_name = file.stem
                    full_cog_name = f"{directory}.{cog_name}"
                    status = "‚úÖ Load" if full_cog_name in self.bot.extensions else "‚ùå Unload"
                    cog_statuses.append(f"**`{cog_name}`** ‚Äî {status}")

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ Embed
            if cog_statuses:
                embed.add_field(
                    name=f"üìÇ {directory}",
                    value="\n".join(cog_statuses),
                    inline=False
                )

        embed.set_footer(
            text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {inter.author}",
            icon_url=inter.author.display_avatar.url
        )

        await inter.response.send_message(embed=embed)


def setup(bot):
    bot.add_cog(DevCogShow(bot))
